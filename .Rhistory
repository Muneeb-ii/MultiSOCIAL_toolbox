# installing crqa package
install.packages("crqa")
#load the data
data(crqa)
install.packages("tseriesChaos")
#load the data
lorData <- - lorenz (time = seq(0, 20, by=0.02), do.plot = F)
#load the data
lorenz <- nonlinearTseries::lorenz
# installing crqa package
install.packages("crqa")
install.packages("tseriesChaos")
install.packages("nonlinearTseries")
install.packages("entropy")
install.packages("plot3D")
install.packages("SDMTools")
lorenz <- nonlinearTseries::lorenz
lorData <- -lorenz (time = seq(0, 20, by=0.02), do.plot = F)
lorData <- lorenz (time = seq(0, 20, by=0.02), do.plot = F)
lorData <- -lorenz (time = seq(0, 20, by=0.02), do.plot = F)
lorData <- lorenz (time = seq(0, 20, by=0.02), do.plot = F)
mutual (lorData$x, lag.max = 50)
mutual <- tseriesChaos::mutual
mutual (lorData$x, lag.max = 50)
plot(false.nearest (lorData$x, m = 10, d = 9, t = 0))
#embedding
false.nearest <- tseriesChaos::false.nearest
plot(false.nearest (lorData$x, m = 10, d = 9, t = 0))
#crqa
crqa_results_ab <– crqa(ts1 = lorData$z, ts2 = lorData$z, delay = 9, embed = 3, rescale = 2, radius = 20, normalize = 2, mindiagline = 2, minvertline = 2, tw = 0, whiteline = FALSE, recpt = FALSE, side = “both”) # running crqa
#crqa
crqa_results_ab <- crqa(ts1 = lorData$z, ts2 = lorData$z, delay = 9, embed = 3, rescale = 2, radius = 20, normalize = 2, mindiagline = 2, minvertline = 2, tw = 0, whiteline = FALSE, recpt = FALSE, side = “both”) # running crqa
crqa_results_ab <- crqa(ts1 = lorData$z, ts2 = lorData$z, delay = 9, embed = 3, rescale = 2, radius = 20, normalize = 2, mindiagline = 2, minvertline = 2, tw = 0, whiteline = FALSE, recpt = FALSE, side = "both") # running crqa
crqa <- crqa::crqa
crqa <- crqa::crqa
plot(crqa_results_ab$RP@i,type='p',cex=.5, xlab = "Time Series 1", ylab="Time Series 2", labels=FALSE)
#crqa
crqa <- crqa::crqa
crqa_results_ab <- crqa(ts1 = lorData$z, ts2 = lorData$x, delay = 9, embed = 5, rescale = 2, radius = 20, normalize = 2, mindiagline = 2, minvertline = 2, tw = 0, whiteline = FALSE, recpt = FALSE, side = "both") # running crqa
plot(crqa_results_ab$RP@i,type='p',cex=.5, xlab = "Time Series 1", ylab="Time Series 2", labels=FALSE)
plot(crqa_results_ab$RP@i,type='p',cex=.5, xlab = "Time Series 1", ylab="Time Series 2", labels=FALSE, warning=FALSE)
plot(crqa_results_ab$RP,type='p',cex=.5, xlab = "Time Series 1", ylab="Time Series 2", labels=FALSE, warning=FALSE)
plot(crqa_results_ab$RP,type='p',cex=.5, xlab = "Time Series 1", ylab="Time Series 2")
RP = crqa_results_ab$RP # take out the recurrence plot
RP = matrix(as.numeric(RP), nrow = length(lorData$z)) # transform it for plotting
tstamp = seq(0, length(lorData$z), 10)
cols = c("white","blue4")
par(mar = c(3.8, 3.8, 0.2,2), font.axis = 2, cex.axis = 1,
font.lab = 2, cex.lab = 1.2)
plot(tstamp, tstamp, type = "n", xlab = "", ylab = "")
l = 1
for (l in 1:length(lorData$z)){
ind = which(RP[,l] == 1)
points(rep(l,length(ind)), ind, cex = 1.2, col = "blue4", pch = 20)
}
dcrp_res <- drpdfromts(speaker, listener, ws = 100, datatype = "continuous",
radius = 0.000001)
a = as.matrix(lorData$z)
b = as.matrix(lorData$z)
dcrp_res <- drpdfromts(a, b, ws = 100, datatype = "continuous",
radius = 0.000001)
dcrp_res <- drpdfromts(a, b, ws = 100, datatype = "continuous",
radius = 0.000001)
dcrp <- crqa::drpfromts
dcrp_res <- dcrp(a, b, ws = 100, datatype = "continuous",
radius = 0.000001)
dcrp_res <- dcrp(a, b, windowsize = 100, datatype = "continuous",
radius = 0.000001)
plot(timecourse, profile,type = "l",
lwd = 5, xlab = "Lag (seconds)", ylab = "RR")
profile = dcrp_res$profile*100
timecourse = round( seq(-3300,3300,33)/1000, digit = 1)
mxlag = dcrp_res$maxlag
## The timing in second of the lag
timecourse[mxlag]
plot(timecourse, profile,type = "l",
lwd = 5, xlab = "Lag (seconds)", ylab = "RR")
abline(v = timecourse[plot(timecourse, profile,type = "l",
lwd = 5, xlab = "Lag (seconds)", ylab = "RR")
abline(v = timecourse[dcrp_res$maxlag], lty = 2, col = "gray40", lwd = 3)
a = as.matrix(lorData$z)
b = as.matrix(lorData$z)
dcrp_res <- dcrp(a, b, windowsize = 100, radius = 20,
delay= 9, embed=3, rescale=2, normalize=2, mindiagline=2, minvertline = 2, tw = 0,
whiteline = FALSE, recpt= TRUE, side = "both", method = "crqa", metric = "euclidean", datatype = "continuous")
a = as.matrix(lorData$z)
b = as.matrix(lorData$z)
#dcrp_res <- dcrp(a, b, windowsize = 100, radius = 20,
#delay= 9, embed=3, rescale=2, normalize=2, mindiagline=2, minvertline = 2, tw = 0,
#whiteline = FALSE, recpt= TRUE, side = "both", method = "crqa", metric = "euclidean", datatype = "continuous")
dcrp_res <- dcrp(a, b, windowsize = 100, datatype = "continuous",
radius = 0.000001)
profile = dcrp_res$profile*100
timecourse = round( seq(-3300,3300,33)/1000, digit = 1)
mxlag = dcrp_res$maxlag
## The timing in second of the lag
timecourse[mxlag]
plot(timecourse, profile,type = "l",
lwd = 5, xlab = "Lag (seconds)", ylab = "RR")
abline(v = timecourse[plot(timecourse, profile,type = "l",
lwd = 5, xlab = "Lag (seconds)", ylab = "RR")
abline(v = timecourse[dcrp_res$maxlag], lty = 2, col = "gray40", lwd = 3)
dcrp_res <- dcrp(a, b, windowsize = 20, datatype = "continuous",
radius = 0.000001)
profile = dcrp_res$profile*100
timecourse = round( seq(-3300,3300,33)/1000, digit = 1)
mxlag = dcrp_res$maxlag
## The timing in second of the lag
timecourse[mxlag]
plot(timecourse, profile,type = "l",
lwd = 5, xlab = "Lag (seconds)", ylab = "RR")
a = as.matrix(lorData$z)
b = as.matrix(lorData$z)
#dcrp_res <- dcrp(a, b, windowsize = 100, radius = 20,
#delay= 9, embed=3, rescale=2, normalize=2, mindiagline=2, minvertline = 2, tw = 0,
#whiteline = FALSE, recpt= TRUE, side = "both", method = "crqa", metric = "euclidean", datatype = "continuous")
dcrp_res <- dcrp(a, b, windowsize = 20, datatype = "continuous",
radius = 0.000001)
profile = dcrp_res$profile*100
timecourse = round( seq(-3300,3300,33)/1000, digit = 1)
mxlag = dcrp_res$maxlag
## The timing in second of the lag
timecourse[mxlag]
plot(timecourse, profile,type = "l",
lwd = 5, xlab = "Lag (seconds)", ylab = "RR")
